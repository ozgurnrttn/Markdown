knitr::opts_chunk$set(echo = TRUE,message =F)
library("plotly")
library("tidyr")
library("tidyverse")
library("dplyr")
library("ggplot2")
library("psych")
library(scales)
elmas = ggplot2::diamonds
library("plotly")
library("tidyr")
library("tidyverse")
library("dplyr")
library("ggplot2")
library("psych")
library(scales)
elmas = ggplot2::diamonds
as_tibble(elmas)
glimpse(elmas)
describe(elmas$price,trim = 0.05,type=3)
names(elmas)
select(elmas,clarity:price)
select(elmas,-(clarity:price))
filter(elmas, cut %in% c("Premium","Very Good"))
filter(elmas,table < 60 & price > 400)
arrange(elmas, price)
arrange(select(elmas, cut, clarity,table), table)
arrange(select(elmas,cut, clarity, price, table),desc(table))
summarise(elmas,GozlemSayisi=n(),
CutDestinasyonlari=n_distinct(cut),
ClarityDestinasyonlari= n_distinct(clarity),
ColorDestinasyonlari= n_distinct(color),
OrtalamaTable= mean(table, na.rm = T))
elmas %>%
select(depth,table) %>%
filter(depth< table) %>%
summarise(genel_toplam = sum(table))
elmas %>% select(carat) %>% sum()
head(elmas %>% select(color, depth) %>% filter(color=="J"))
elmas %>% group_by(cut) %>% summarise(Adet=n())
elmas %>% group_by(color) %>% summarise(Adet=n())
elmas %>% group_by(clarity) %>% summarise(Adet=n())
elmas %>% group_by(cut, clarity) %>% summarise(Adet=n())
ggplot(data=elmas)+ geom_point(mapping = aes(x=price,y=table,color=clarity))
ggplot(data=elmas)+geom_boxplot(mapping = aes(x=clarity, y=table, color=clarity))
ggplot(data=elmas)+geom_boxplot(mapping = aes(x=cut, y=table, color=cut))
ggplot(data=elmas)+geom_boxplot(mapping = aes(x=color, y=table, color=color))
ggplot(diamonds,aes(x = cut, fill = cut)) +
geom_bar()+
labs( x = "Elmasların kesim türü",
y = "Frekanslar",
title = "Kesimlerine göre elmas türleri")
ggplot(data=elmas,aes(x=price))+geom_histogram(aes(y=..density..),color="Black", fill="Blue")+geom_density()
ggplot(data=elmas,aes(x=depth))+geom_histogram(aes(y=..density..),color="Black", fill="Red")+geom_density()
ggplot(data=elmas,aes(x=carat))+geom_histogram(aes(y=..density..),color="Black", fill="Purple")+geom_density()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge")
ggplot(data=elmas)+ geom_bar(mapping = aes(x=cut, fill=clarity))
ggplot(data=elmas)+ geom_bar(mapping = aes(x=cut, fill=clarity),position = "fill")
ggplot(diamonds,aes(x = cut, fill = cut)) +
geom_bar(aes(y = (..count..)))+ geom_text(aes(y=(..count..), vjust = -0.5, label = ifelse((..count..)== 0 ,"", scales::percent((..count..)/sum(..count..)))), stat = "count")+theme(axis.title.x = element_text(size = 8, angle = 90))
ggplot(diamonds,aes(x = cut, fill = cut)) +
geom_bar(aes(y = (..count..)))+ geom_text(aes(y=(..count..), vjust = -0.5, label = ifelse((..count..)== 0 ,"", scales::percent((..count..)/sum(..count..)))), stat = "count")+
labs( x = "Elmasların kesim türü",
y = "Frekanslar",
title = "Kesimlerine göre elmas türleri")
ggplot(diamonds,aes(x = "", fill=clarity)) +
geom_bar(width = 1) +
coord_polar (theta="y")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut), show.legend = FALSE, width = 1) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)+
coord_flip()+
coord_polar()
plot_ly(diamonds, x = ~carat, y = ~depth, z = ~table, color = ~color, colors = c('#BF382A', '#0C4B8E')) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'carat'),
yaxis = list(title = 'depth'),
zaxis = list(title = 'table')))
library(dash)
install.packages(c("dash;", "dashHtmlComponents;", "dashCoreComponents;", "quantmod"))
install.packages("dash")
install.packages("dashCoreComponents")
install.packages("dashHtmlComponents")
library(dash)
library(dashHtmlComponents)
library(dashCoreComponents)
library(quantmod)
getSymbols(c("Coke" = "COKE", "Tesla" = "TSLA", "Apple" = "AAPL"))
app <- Dash$new()
app$layout(
htmlDiv(
list(
dccDropdown(
id = "stock-dropdown",
options = list(
list(label = "Coke", value = "COKE"),
list(label = "Tesla", value = "TSLA"),
list(label = "Apple", value = "AAPL")
),
value = "COKE"
),
dccGraph(id = "stock-graph")
)
)
)
app$callback(output("stock-graph", "figure"),
list(input("stock-dropdown", "value")),
function(ticker) {
d <- switch(ticker, AAPL = AAPL, TSLA = TSLA, COKE = COKE)
list(
data = list(
list(x = index(d), y = as.numeric(d[, 4]))
),
layout = list(title = ticker)
)
}
)
app$run_server()
shiny::runApp('~/Symbol')
COKE
q()
